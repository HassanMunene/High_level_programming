Test cases for add_integer(a, b=98)

>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1, 3)
4
>>> add_integer(0.5, 3.5)
3
>>>
>>> add_integer("trick", 3)
Traceback (most recent call last):

	...
TypeError: a must be an integer
>>> add_integer(3, "trick")
Traceback (most recent call last)

	...
TypeError: b must be an integer
>>> add_integer(None, None)
Traceback (most recent call last)

	...
TypeError: a must be an integer
>>> add_integer(9876543219876, 0)
9876543219876
>>> add_integer()
Traceback (most recent call last)

	...
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(float('inf'))
Traceback (most recent call last):

	...
OverflowError: cannot convert float inifnity to integer
>>> add_integer(float('nan'))
Traceback (most recent call last):

	...
ValueError: cannot convert float NaN to integer
